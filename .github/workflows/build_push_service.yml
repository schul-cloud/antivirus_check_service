# Workflow to build and push the imgages for the schulcloud antivirus service 
# Tagging of the images push to Docker Hub  will follow the branch based naming conventions
# use in sc-app-ci to allow deploying the images on team machines  

name: sc-app-build-push

# Controls when the action will run.
on:
  push:
    branches:
      - develop
      - master
      # release branches are of e.g. release/25.3.0
      - release/[0-9]+.[0-9]+.[0-9]+
      # OPS-1664 naming convention <branch>/<JIRA-Ticket ID>-<Jira_Summary>
      - hotfix/[A-Z]+-[0-9]+-[a-zA-Z0-9]+_[a-zA-Z0-9]+*
      - feature/[A-Z]+-[0-9]+-[a-zA-Z0-9]+_[a-zA-Z0-9]+*
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_and_push"
  build_and_push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      # Setting environment variables here make them available for all steps
      AVSCANFILE_REPO: schulcloud-avcheck-scanfile
      AVSCANURL_REPO: schulcloud-avcheck-scanurl
      AVSCANWEBSERVER_REPO: schulcloud-avcheck-webserver
      DOCKER_NAMESPACE: schulcloud
      BRANCH_NAME: ""
      AVCHECK_VERSION: ""
      DOCKER_TAG_POSTFIX: ""
      DOCKER_TAG_SHA: ""
      JIRA_TicketID: ""
      BRANCH_PREFIX: ""

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it must be on first place to allow central setting of working directory
      - uses: actions/checkout@v2
      - name: Get Branch name
        uses: RalfNellesCap/composite_action_dockertag@v1
      - name: Echo DOCKER_TAG_POSTFIX
        run: echo "DOCKER_TAG_POSTFIX is ${DOCKER_TAG_POSTFIX}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push Scanfile
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.scanfile
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANFILE_REPO }}:${{ env.DOCKER_TAG_POSTFIX }}
      - name: Build and push Scanurl
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.scanurl
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANURL_REPO }}:${{env. DOCKER_TAG_POSTFIX}}
      - name: Build and push Webserver
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.webserver
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANWEBSERVER_REPO }}:${{ env.DOCKER_TAG_POSTFIX }}
      - name: Build and push SHA Tag for Master and Release on Scanfile
        if: ${{ github.event.inputs.branch-prefix == 'master' || github.event.inputs.branch-prefix == 'release' }}
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.scanfile
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANWEBSERVER_REPO }}:${{ env.DOCKER_TAG_SHA }}
      - name: Build and push SHA Tag for Master and Release on Scanurl
        if: ${{ github.event.inputs.branch-prefix == 'master' || github.event.inputs.branch-prefix == 'release' }}
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.scanurl
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANWEBSERVER_REPO }}:${{ env.DOCKER_TAG_SHA }}
      - name: Build and push SHA Tag for Master and Release on Webserver
        if: ${{ github.event.inputs.branch-prefix == 'master' || github.event.inputs.branch-prefix == 'release' }}
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.webserver
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANWEBSERVER_REPO }}:${{ env.DOCKER_TAG_SHA }}